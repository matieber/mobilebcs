//import 'package:mercadosalud/models/post.dart';
import 'package:mercadosalud/models/application_models.dart';
import 'package:mercadosalud/ui/shared/ui_helpers.dart';
import 'package:mercadosalud/ui/dumb_widgets/input_field.dart';
import 'package:flutter/material.dart';
import 'package:stacked/stacked.dart';
import 'package:flutter_form_builder/flutter_form_builder.dart';

import 'create_post_view_model.dart';

class CreatePostView extends StatelessWidget {
  //final titleController = TextEditingController();
  final Post? edittingPost;
  CreatePostView({Key? key, this.edittingPost}) : super(key: key);
  final _formKey = GlobalKey<FormBuilderState>();

  @override
  Widget build(BuildContext context) {
    return ViewModelBuilder<CreatePostViewModel>.reactive(
      viewModelBuilder: () => CreatePostViewModel(),
      onModelReady: (model) {
        // update the text in the controller
        //titleController.text = edittingPost?.title ?? '';
        //

        if (edittingPost != null) model.setEdittingPost(edittingPost!);
      },
      builder: (context, model, child) => Scaffold(
          floatingActionButton: FloatingActionButton(
            child: !model.isBusy
                ? Icon(Icons.add)
                : CircularProgressIndicator(
                    valueColor: AlwaysStoppedAnimation(Colors.white),
                  ),
            onPressed: () {
              if (!model.isBusy) {
                if (_formKey.currentState!.saveAndValidate()) {
                  print('Valid');
                } else {
                  print('Invalid');
                }

                model.addPost(
                    title: _formKey.currentState!.fields['title']!.value);
              }
            },
            backgroundColor: !model.isBusy
                ? Theme.of(context).primaryColor
                : Colors.grey[600],
          ),
          body: Padding(
              padding: const EdgeInsets.symmetric(horizontal: 30.0),
              child: FormBuilder(
                key: _formKey,
                autovalidateMode: AutovalidateMode.onUserInteraction,
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: <Widget>[
                    verticalSpaceLarge,
                    Text(
                      'Create Post',
                      style: TextStyle(fontSize: 26),
                    ),
                    verticalSpaceMedium,
                    //InputField(
                    //  placeholder: 'Title',
                    //  controller: titleController,
                    //),
                    verticalSpaceMedium,
                    FormBuilderTextField(
                      name: 'title',
                      initialValue: edittingPost?.title ?? '',
                      decoration: InputDecoration(
                        labelText: 'title',
                      ),
                      //onChanged: _onChanged,
                      // valueTransformer: (text) => num.tryParse(text),
                      validator: FormBuilderValidators.compose([
                        FormBuilderValidators.required(context),
                      ]),
                      //keyboardType: TextInputType.emailAddress,
                    ),
                    Text('Post Image'),
                    verticalSpaceSmall,

                    GestureDetector(
                      // When we tap we call selectImage
                      onTap: () => model.selectImage(),
                      child: Container(
                        height: 250,
                        decoration: BoxDecoration(
                            color: Colors.grey[200],
                            borderRadius: BorderRadius.circular(10)),
                        alignment: Alignment.center,
                        // If the selected image is null we show "Tap to add post image"
                        child: model.selectedImage == null
                            ? Text(
                                'Tap to add post image',
                                style: TextStyle(color: Colors.grey[400]),
                              )
                            // If we have a selected image we want to show it
                            : Image.file(model.selectedImage!),
                      ),
                    )
                  ],
                ),
              ))),
    );
  }
}
