#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{a4wide}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes true
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Conclusiones,
 Limitaciones y Trabajos Futuros
\end_layout

\begin_layout Section
Conclusión
\end_layout

\begin_layout Standard
En este proyecto se desarrolló un sistema funcional y extensible diseñado para su implementación en entornos ganaderos,
 logrando mejorar la precisión y eficiencia en la predicción del BCS.
 Este desarrollo supuso enfrentar diferentes niveles de desafío según el componente en cuestión.
 En el caso del servidor,
 mi experiencia de más de 10 años como desarrollador backend fue determinante para diseñar e implementar este componente de manera ágil,
 utilizando tecnologías como Java,
 Spring Boot,
 JMS Template y STOMP.
 Además,
 esta experiencia facilitó la comprensión del dominio y los requerimientos funcionales,
 permitiendo una interacción efectiva con el modelo de negocio y sus particularidades.
\end_layout

\begin_layout Standard
Por otro lado,
 el desarrollo de la aplicación móvil representó un desafío mayor,
 debido a mi falta de experiencia con Flutter,
 Dart y el desarrollo de interfaces visuales.
 Esta situación implicó una curva de aprendizaje significativa,
 que demandó más tiempo y esfuerzo en comparación con el desarrollo del servidor.
 Sin embargo,
 esta experiencia se convirtió en una oportunidad valiosa para ampliar mis habilidades en áreas complementarias y explorar nuevos enfoques en el desarrollo de software.
\end_layout

\begin_layout Standard
En total,
 el proyecto involucró el desarrollo de 113 clases java y 4748 lineas de código en el servidor y 52 archivos dart y 37 clases java y 6006 lineas de código en la aplicación móvil,
 alcanzando un total de 10754 líneas de código,
 reflejando su complejidad técnica y su alcance.
\end_layout

\begin_layout Standard
La modularidad y escalabilidad del sistema abren puertas para futuras ampliaciones,
 como la integración con dispositivos IoT,
 la optimización de modelos predictivos según distintas razas bovinas y el desarrollo de estrategias avanzadas de tolerancia a fallos.
 En conjunto,
 este proyecto no solo cumplió con los objetivos iniciales,
 sino que también sienta las bases para nuevas innovaciones en la automatización y gestión del sector ganadero.
 Además,
 representa un avance significativo tanto en términos técnicos como en el aprendizaje y adaptación a tecnologías y dominios desconocidos.
\end_layout

\begin_layout Section
Limitaciones
\end_layout

\begin_layout Subsection
Seguridad
\end_layout

\begin_layout Standard
El sistema de inicio de sesión presenta una limitación en términos de seguridad.
 Actualmente,
 este componente únicamente permite identificar el tipo de usuario y asociar calificaciones a un experto específico,
 pero no incluye mecanismos de autenticación robustos ni validaciones avanzadas para garantizar la protección del acceso.
\end_layout

\begin_layout Standard
Asimismo,
 no se han implementado restricciones para controlar quiénes pueden registrarse como calificadores.
 Esto permite que cualquier usuario pueda asumir este rol,
 lo que podría comprometer la calidad de las evaluaciones realizadas.
 La falta de validación previa de las credenciales o experiencia de los calificadores representa una limitación para la confiabilidad del sistema en entornos reales.
\end_layout

\begin_layout Subsection
Tolerencia a fallos
\end_layout

\begin_layout Standard
El sistema actual presenta limitaciones en su capacidad de tolerancia a fallos.
 Ante interrupciones en la conexión WebSocket o errores relacionados,
 no existen mecanismos implementados para realizar reintentos automáticos o redirigir los trabajos ("jobs"),
 lo que puede resultar en predicciones no realizadas por el modelo.
\end_layout

\begin_layout Standard
Asimismo,
 el proceso de calificación carece de estrategias que manejen fallos en llamadas REST,
 lo que puede ocasionar la pérdida de evaluaciones realizadas por los expertos y comprometer la integridad de los datos almacenados.
\end_layout

\begin_layout Subsection
Mejora en la Gestión de Jobs para Calificadores
\end_layout

\begin_layout Standard
Una limitación en la implementación actual es que los calificadores no pueden procesar los trabajos ("jobs") generados antes de su ingreso a una sesión de calificación.
 Esto significa que los trabajos existentes antes del inicio de la sesión quedan sin calificar,
 lo que afecta la completitud del proceso de calificación.
\end_layout

\begin_layout Standard
Además,
 no se contempla la carga automática de trabajos previos desde la base de datos hacia la cola JMS del usuario al momento de iniciar sesión,
 lo que limita la capacidad de los calificadores para abordar tareas pendientes acumuladas antes de su participación activa en la sesión.
\end_layout

\begin_layout Subsection
Observadores y Algoritmo de Predicción
\end_layout

\begin_layout Standard
En la implementación actual,
 la predicción del puntaje de condición corporal (BCS) está limitada a ser ejecutada exclusivamente en la aplicación móvil por usuarios con logueados con el rol de observador.
 Esto implica que,
 en ausencia de observadores,
 el sistema no genera predicciones.
 En etapas de prueba preliminares del prototipo en entornos reales en los que el apartamiento de animales según condición corporal se realice de forma manual,
 sin mecanización automática,
 es decir,
 por humanos,
 esto puede no verse como una limitación ya que se puede asumir que el sistema contará con el poder de cómputo de los dispositivos de quienes realizan dicha labor.
 Sin embargo,
 en un entorno que cuenta con apartamiento automático,
 es deseable que el sistema cuente con una forma alternativa de generar la predicción.
 Para esto,
 se prevee que en el futuro el componente servidor actúe como un observador por defecto.
\end_layout

\begin_layout Section
Trabajos futuros
\end_layout

\begin_layout Subsection
Múltiples calificadores
\end_layout

\begin_layout Standard
En futuras versiones del servidor,
 se planea implementar mejoras que permitan a los calificadores compartir una única cola JMS,
 facilitando la distribución equitativa de las tareas de calificación.
 Esto incluiría la opción de dividir un grupo de vacas (rodeo) entre calificadores o mantener la funcionalidad actual,
 donde todos los calificadores evalúan todas las vacas.
 Además,
 esta mejora permitiría que los calificadores puedan abandonar una sesión y unirse a otra según sea necesario,
 ofreciendo mayor flexibilidad en la gestión de las sesiones.
\end_layout

\begin_layout Standard
Actualmente,
 aunque la aplicación móvil no permite que dos calificadores trabajen simultáneamente,
 el servidor ha sido diseñado para admitir múltiples calificadores en una misma sesión.
 Cada calificador dispone de su propia cola JMS y tiene la capacidad de calificar todas las vacas,
 lo que sienta las bases para la implementación de las mejoras mencionadas.
\end_layout

\begin_layout Subsection
Sistema generador de Jobs
\end_layout

\begin_layout Standard
En las pruebas de rendimiento realizadas,
 fue necesario la creación de dicho componente para simular un escenario de ejecución.
 Sin embargo,
 la implementación real de un sistema de generación de jobs quedó fuera del alcance de este proyecto.Este sistema debiera configurarse para notificar al servidor sobre la existencia de una secuencia de imágenes capturadas por una cámara y asociadas unívocamente a una vaca,
 lo que da lugar a la creación de un "job" que deberá ser tratado por el componente servidor desarrollado en este proyecto.
 El generador de jobs deberá permitir,
 además,
 configurar la cantidad de imágenes por vaca a ser capturadas,
 teniendo en cuenta calidad de las mismas,
 por ejemplo,
 mediante la aplicación de filtros para determinar borrosidad de la imágen,
 presencia total o parcial de la parte del cuerpo que se emplea en el cálculo del BCS,
 etc..
\end_layout

\begin_layout Subsection
Procesamiento de imágenes
\end_layout

\begin_layout Standard
Actualmente,
 el sistema está diseñado para recibir y almacenar múltiples imágenes asociadas a cada vaca;
 sin embargo,
 sólo la primera imagen es enviada a los usuarios calificadores y observadores.
 Una posible mejora futura sería habilitar la capacidad de enviar todas las imágenes relacionadas con cada vaca,
 permitiendo un análisis más exhaustivo por parte de los calificadores y observadores.
 Además,
 esto abriría la posibilidad de optimizar el algoritmo de predicción para procesar múltiples imágenes dentro de un mismo job,
 lo que podría mejorar la precisión de los resultados generados.
\end_layout

\begin_layout Subsection
Integración con IoT
\end_layout

\begin_layout Standard
El sistema tiene el potencial de integrarse en un entorno IoT,
 permitiendo la conexión con dispositivos y elementos del entorno ganadero,
 como mangas,
 corrales y comederos.
 Esto requerirá desarrollar una capa de comunicación que facilite la captura automatizada de datos y acciones de contingencia,
 estructurando el sistema como un Sistema Integral de Gestión de la Información (SIGI) para apoyar el monitoreo,
 la planificación y la toma de decisiones.
\end_layout

\begin_layout Subsection
Múltiples modelos
\end_layout

\begin_layout Standard
Actualmente,
 la aplicación móvil está diseñada de manera modular,
 lo que permite delegar la ejecución del algoritmo de predicción a un plugin específico de Android.
 Esta estructura facilita la integración de nuevos modelos de predicción mediante ajustes en el código.
 Sin embargo,
 para aprovechar esta flexibilidad,
 es necesario desarrollar una funcionalidad adicional en la aplicación que permita seleccionar el modelo de predicción deseado,
 lo que representa una posible mejora a futuro.
\end_layout

\begin_layout Subsection
Multiples plataformas
\end_layout

\begin_layout Standard
Al desarrollar la aplicación móvil en Flutter,
 la portabilidad a iOS se facilita significativamente debido a la naturaleza multiplataforma del framework.
 Sin embargo,
 para lograr esta transición,
 es necesario analizar y ajustar el modelo predictivo,
 ya que actualmente está diseñado y probado específicamente dispositivos Android.
\end_layout

\begin_layout Subsection
Configuración de la participación de observadores en el cálculo de BCS
\end_layout

\begin_layout Standard
En futuras implementaciones,
 se planea incorporar a la aplicación móvil un interruptor (switch) junto con un campo de configuración que permita a un usuario observador decidir si aportar o no recursos de cómputo para el cálculo del BCS,
 o incluso que dicha opción pueda ser habilitada dependiendo del nivel de batería con el que cuenta el dispositivo.
 Este mecanismo permitirá al dispositivo móvil notificar al servidor si puede ofrecer recursos de procesamiento para el cálculo del BCS como así también fijar cuotas de uso de batería.
\end_layout

\begin_layout Standard
Al activar este interruptor,
 se deberá iniciar un servicio en segundo plano encargado de gestionar un protocolo de intercambio de mensajes entre la aplicación y el servidor,
 asegurando una coordinación eficiente para el uso compartido de recursos.
 Aunque esta funcionalidad estaba contemplada desde el inicio,
 no se logró implementar debido a las dificultades encontradas durante el desarrollo de la aplicación móvil.
\end_layout

\end_body
\end_document
