CREATE TABLE server.LOCATION(
    ID INT AUTO_INCREMENT PRIMARY KEY,
    CODE VARCHAR(20),
    NAME VARCHAR(100)
)COMMENT 'Lugares físicos en los cuales se realizan las calificaciones';

CREATE TABLE server.QUALIFICATION_SESSION(
	ID BIGINT AUTO_INCREMENT PRIMARY KEY,
	LOCATION_ID INT NOT NULL,
	START_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	END_DATE TIMESTAMP NULL,
	CONSTRAINT `fk_QUALIFICATION_SESSION_LOCATION_ID` FOREIGN KEY(`LOCATION_ID`) REFERENCES `LOCATION`(`ID`)
)COMMENT 'Sesiones de calificación realizadas en una locación particular';

CREATE TABLE server.LOCATION_QUALIFICATION_SESSION(
	QUALIFICATION_SESSION_ID BIGINT,
	LOCATION_ID INT,
	CONSTRAINT pk_LOCATION_QUALIFICATION_SESSION PRIMARY KEY(LOCATION_ID),
	CONSTRAINT `fk_LOCATION_QUALIFICATION_SESSION_LOCATION_ID` FOREIGN KEY(`LOCATION_ID`) REFERENCES `LOCATION`(`ID`),
	CONSTRAINT `fk_LOCATION_QUALIFICATION_SESSION_QUALIFICATION_SESSION_ID` FOREIGN KEY(`QUALIFICATION_SESSION_ID`) REFERENCES `QUALIFICATION_SESSION`(`ID`)
)COMMENT 'Sesiones activas en cada locación';

CREATE TABLE server.`USER`(
    ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_NAME VARCHAR(100),
    TYPE VARCHAR(20),
    CONSTRAINT uk_USER_USER_NAME UNIQUE(`USER_NAME`)

)COMMENT 'Usuarios registrados en el sistema';

CREATE TABLE server.USER_QUALIFICATION_SESSION(
    USER_ID INT,
    QUALIFICATION_SESSION_ID BIGINT,
    PRIMARY KEY(USER_ID,QUALIFICATION_SESSION_ID),
    CONSTRAINT `fk_USER_QUALIFICATION_SESSION_QUALIFICATION_SESSION_ID` FOREIGN KEY(`QUALIFICATION_SESSION_ID`) REFERENCES `QUALIFICATION_SESSION`(`ID`),
    CONSTRAINT `fk_USER_QUALIFICATION_SESSION_USER_ID` FOREIGN KEY(`USER_ID`) REFERENCES `USER`(`ID`)
)COMMENT 'Usuarios registrados en la sesión de calificación';

CREATE TABLE server.USER_LOCATION_QUALIFICATION_SESSION(
    USER_ID INT PRIMARY KEY,
    QUALIFICATION_SESSION_ID BIGINT,
    CONSTRAINT UNIQUE (USER_ID),
    CONSTRAINT `fk_USER_LOCATION_QUALIF_SESSION_USER_QUALIF_SESSION` FOREIGN KEY(`USER_ID`,`QUALIFICATION_SESSION_ID`) REFERENCES `USER_QUALIFICATION_SESSION`(`USER_ID`,`QUALIFICATION_SESSION_ID`),
    CONSTRAINT `fk_USER_LOCATION_QUALIFICATION_SESSION_QUALIFICATION_SESSION_ID` FOREIGN KEY(`QUALIFICATION_SESSION_ID`) REFERENCES `LOCATION_QUALIFICATION_SESSION`(`QUALIFICATION_SESSION_ID`),
    CONSTRAINT `fk_USER_LOCATION_QUALIFICATION_SESSION_USER_ID` FOREIGN KEY(`USER_ID`) REFERENCES `USER`(`ID`)
)COMMENT 'Usuarios registrados en la sesión de calificación actual';


CREATE TABLE IMAGE_SET(
 ID BIGINT AUTO_INCREMENT PRIMARY KEY,
 SET_CODE VARCHAR(36) UNIQUE COMMENT 'Identificación (uuid) que agrupa las imágenes realizadas a una caravana',
 IDENTIFICATION VARCHAR(100)
);

CREATE TABLE server.IMAGE_SET_LOCATION(
    IMAGE_SET_ID BIGINT PRIMARY KEY,
    LOCATION_ID INT,
    CREATION_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `POSITION` SMALLINT NOT NULL,
   CONSTRAINT uk_IMAGE_SET_LOCATION_POSITION UNIQUE(`LOCATION_ID`,`POSITION`),
   CONSTRAINT fk_IMAGE_SET_LOCATION_LOCATION_ID FOREIGN KEY(`LOCATION_ID`) REFERENCES `LOCATION`(`ID`),
   CONSTRAINT fk_IMAGE_SET_LOCATION_SET_ID FOREIGN KEY(`IMAGE_SET_ID`) REFERENCES `IMAGE_SET`(`ID`),
   CONSTRAINT nn_IMAGE_SET_LOCATION_LOCATION_ID CHECK( `LOCATION_ID` is NOT NULL)
   )COMMENT 'Conjuntos de imágenes actuales de una caravana en una locación';


CREATE TABLE server.IMAGE_SET_QUALIFICATION_SESSION(
  IMAGE_SET_ID BIGINT PRIMARY KEY,
  QUALIFICATION_SESSION_ID BIGINT NOT NULL,
  CONSTRAINT fk_IMAGE_SET_QUALIFICATION_SESSION_SET_ID FOREIGN KEY(`IMAGE_SET_ID`) REFERENCES `IMAGE_SET`(`ID`),
  CONSTRAINT `fk_IMAGE_SET_QUALIFICATION_SESSION_ID` FOREIGN KEY(`QUALIFICATION_SESSION_ID`) REFERENCES `QUALIFICATION_SESSION`(`ID`)
)COMMENT 'Conjuntos de imágenes de una sesión de calificación';




CREATE TABLE server.IMAGE(
    ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    IMAGE_SET_ID BIGINT NOT NULL,
    PRIORITY INT NULL COMMENT 'La imagen con mas prioridad será enviada al calificador, el resto de las imágenes en orden de prioridad van a ser enviadas a los viewer según la configuración de cada uno',
    `PATH` VARCHAR(500) NULL UNIQUE COMMENT 'Directorio + nombre del archivo',
     CONSTRAINT  `fk_IMAGE_SET_ID` FOREIGN KEY (`IMAGE_SET_ID`) REFERENCES IMAGE_SET (`ID`)
);


CREATE TABLE server.PREDICTED_SCORE(
    IMAGE_SET_ID BIGINT NOT NULL PRIMARY KEY ,
    SCORE DECIMAL(5, 4) NOT NULL COMMENT 'Puntaje definido por el algoritmo de predicción',
    QUALIFICATION_SESSION_ID BIGINT NULL,
    CONSTRAINT `fk_PREDICTED_SCORE_SET_ID` FOREIGN KEY (`IMAGE_SET_ID`) REFERENCES `IMAGE_SET` (`ID`),
    CONSTRAINT `fk_PREDICTED_SCORE_QUALIFICATION_SESSION_ID` FOREIGN KEY(`QUALIFICATION_SESSION_ID`) REFERENCES `QUALIFICATION_SESSION`(`ID`)

) COMMENT 'Puntaje para una caravana en una sesión dada definido por el algoritmo de predicción';



CREATE TABLE server.QUALIFIED_SCORE(
    USER_ID INT,
    QUALIFICATION_SESSION_ID BIGINT,
    IMAGE_SET_ID BIGINT NOT NULL,
    SCORE SMALLINT NOT NULL COMMENT 'Puntaje definido por el calificador',
    PRIMARY KEY(USER_ID,QUALIFICATION_SESSION_ID,IMAGE_SET_ID),
    CONSTRAINT `fk_QUALIFIED_SCORE_USER_QUALIFICATION_SESSION` FOREIGN KEY (`USER_ID`,`QUALIFICATION_SESSION_ID`) REFERENCES `USER_QUALIFICATION_SESSION` (`USER_ID`,`QUALIFICATION_SESSION_ID`),
    CONSTRAINT `fk_QUALIFIED_SCORE_SET_ID` FOREIGN KEY (`IMAGE_SET_ID`) REFERENCES `IMAGE_SET` (`ID`),
    CONSTRAINT CHK_QUALIFIED_SCORE_SCORE_MIN CHECK (SCORE >0),
    CONSTRAINT CHK_QUALIFIED_SCORE_SCORE_MAX CHECK (SCORE <=5)

) COMMENT 'Puntaje para una caravana en una sesión dada definido por uno o mas calificadores';
